{"id":"c668","number":4013,"headline":{"en":"Accelerated Scientific Computing","da":"Accelereret Videnskabelig Beregning"},"content":{"en":"Accelerated Scientific Computing: Researchers are exploring how algorithms can be used to accelerate various scientific applications on distributed GPU-based architectures, expose fine-grained parallelism in algebraic multigrid methods, extend dense linear algebra algorithms to multi-accelerator implementations using the FLAME approach, efficiently exploit GPU accelerators in conjunction with multicore processors, perform tridiagonalization of dense symmetric matrices on multiple GPUs, introduce parallel computational techniques for Generic Approximate Sparse Inverse multigrid methods, architect the finite element method pipeline for GPU acceleration, implement spectral finite element schemes on unstructured hexahedral meshes using GPUs, achieve high-performance isogeometric analysis, build high-performance sparse linear algebra on heterogeneous systems, assess the robustness and scalability of the accelerated pseudo-transient method, implement stencil solvers for PDEs on GPUs, GPU-accelerate the ELPA2 distributed eigensolver, utilize the capabilities of the distributed-memory SuperLU sparse direct solver, achieve efficient exascale discretizations using high-order finite element methods, evaluate the performance of the accelerated pseudo-transient method on GPU architectures, efficiently implement the fast iterative method on multi-GPU environments, perform distributed operations on hierarchical H2-matrices on GPUs, implement tridiagonal solvers on large-scale systems with modern multicore and many-core processor architectures, explore newly released capabilities in the distributed-memory SuperLU sparse direct solver, efficiently solve massive tridiagonal systems on multi-GPU environments, and implement the Crank Nicolson algorithm on parallel architectures using the N-shaped partition method.","da":"Accelereret Videnskabelig Beregning: Forskere undersøger, hvordan algoritmer kan bruges til at accelerere forskellige videnskabelige anvendelser på distribuerede GPU-baserede arkitekturer, afsløre fin-granet parallelisme i algebraiske multigridmetoder, udvide tætte lineære algebraalgoritmer til multi-accelerator implementeringer ved hjælp af FLAME-tilgangen, effektivt udnytte GPU-acceleratorer i kombination med multicore processorer, udføre tridiagonalisering af tætte symmetriske matricer på flere GPU'er, introducere parallelle beregningsteknikker for generiske omtrentlige sparse inverse multigridmetoder, designe finite element metode pipeline til GPU-acceleration, implementere spektrale finite element skemaer på ustrukturerede heksaedriske masker ved hjælp af GPU'er, opnå højtydende isogeometrisk analyse, bygge højtydende sparse lineær algebra på heterogene systemer, vurdere robustheden og skalérbarheden af den accelererede pseudotransiente metode, implementere stencil-løsere til PDE'er på GPU'er, GPU-accelerere ELPA2 distribuerede eigenløser, udnytte mulighederne i den distribuerede hukommelses SuperLU sparse direkte løser, opnå effektiv eksskaladiskretisering ved hjælp af højordens finite element metoder, evaluere ydeevnen af den accelererede pseudotransiente metode på GPU-arkitekturer, effektivt implementere den hurtige iterative metode i multi-GPU miljøer, udføre distribuerede operationer på hierarkiske H2-matricer på GPU'er, implementere tridiagonale løsere på storskalasystemer med moderne multicore- og mange-core processor arkitekturer, udforske nyligt frigivne muligheder i den distribuerede hukommelses SuperLU sparse direkte løser, effektivt løse massive tridiagonale systemer i multi-GPU miljøer, og implementere Crank Nicolson-algoritmen på parallelle arkitekturer ved hjælp af N-formede partitionsmetoden."},"bots":{"critic":{"en":null,"da":null},"potential":{"en":null,"da":null}}}